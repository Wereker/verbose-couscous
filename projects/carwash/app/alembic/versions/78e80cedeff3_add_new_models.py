"""Add new models

Revision ID: 78e80cedeff3
Revises: 
Create Date: 2024-12-04 23:29:22.286207

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '78e80cedeff3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brands',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_brands'))
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roles'))
    )
    op.create_table('services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('time', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_services'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('patronymic', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('is_send_notify', sa.Boolean(), server_default='false', nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_table('cars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model', sa.String(length=64), nullable=False),
    sa.Column('brand_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], name=op.f('fk_cars_brand_id_brands')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cars'))
    )
    op.create_table('role_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_role_user_role_id_roles')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_role_user_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role_user'))
    )
    op.create_table('customer_cars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(length=16), nullable=False),
    sa.Column('car_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['car_id'], ['cars.id'], name=op.f('fk_customer_cars_car_id_cars')),
    sa.ForeignKeyConstraint(['customer_id'], ['users.id'], name=op.f('fk_customer_cars_customer_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_customer_cars'))
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('administrator_id', sa.Integer(), nullable=False),
    sa.Column('customer_car_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['administrator_id'], ['users.id'], name=op.f('fk_orders_administrator_id_users')),
    sa.ForeignKeyConstraint(['customer_car_id'], ['customer_cars.id'], name=op.f('fk_orders_customer_car_id_customer_cars')),
    sa.ForeignKeyConstraint(['employee_id'], ['users.id'], name=op.f('fk_orders_employee_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_orders'))
    )
    op.create_table('order_service',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_order_service_order_id_orders')),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], name=op.f('fk_order_service_service_id_services')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_order_service'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_service')
    op.drop_table('orders')
    op.drop_table('customer_cars')
    op.drop_table('role_user')
    op.drop_table('cars')
    op.drop_table('users')
    op.drop_table('services')
    op.drop_table('roles')
    op.drop_table('brands')
    # ### end Alembic commands ###
